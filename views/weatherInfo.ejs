<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Weather App</title>
    <link rel="stylesheet" href="./styles/weatherInfo.css" />
    <style>
      /* Add styles for the video and weather animation */
      .video-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        overflow: hidden;
        pointer-events: none;
      }
      video {
        width: 100%;
        height: 100%;
        object-fit: cover;
      }
      .rain-animation, .sun-animation {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none;
        z-index: -1;
      }
      .rain-drop {
        position: absolute;
        bottom: 100%;
        width: 2px;
        height: 15px;
        background: rgba(255, 255, 255, 0.8);
        animation: fall linear infinite;
      }
      @keyframes fall {
        to {
          transform: translateY(100vh);
        }
      }
    </style>
  </head>
  <body>
    <div class="video-container">
      <video id="timeOfDayVideo" autoplay muted loop></video>
    </div>
    <div class="rain-animation" id="rainAnimation"></div>
    <div class="container">
      <div class="flex">
        <div>
          <h1>Welcome to Weather Forecast App</h1>
        </div>
      </div>
      <div class="grid">
        <div class="grid1">
          <div class="gridFlex">
            <div class="location">
              <h3 style="color: #495464; margin-left: 20px;"><%= location %></h3>
            </div>
            <form action="/getInfo" method="post">
              <div class="search">
                <input type="text" class="search__input" name="locationInput" placeholder="Please enter a location e.g Karachi" />
                <button type="submit" class="search__button">
                  <svg class="search__icon" aria-hidden="true" viewBox="0 0 24 24">
                    <g>
                      <path d="M21.53 20.47l-3.66-3.66C19.195 15.24 20 13.214 20 11c0-4.97-4.03-9-9-9s-9 4.03-9 9 4.03 9 9 9c2.215 0 4.24-.804 5.808-2.13l3.66 3.66c.147.146.34.22.53.22s.385-.073.53-.22c.295-.293.295-.767.002-1.06zM3.5 11c0-4.135 3.365-7.5 7.5-7.5s7.5 3.365 7.5 7.5-3.365 7.5-7.5 7.5-7.5-3.365-7.5-7.5z"></path>
                    </g>
                  </svg>
                </button>
              </div>
            </form>
            <div class="date">
              <h3 style="color: #495464; margin-right: 20px;"><%= date %></h3>
            </div>
          </div>
          <div class="temp" style="margin-bottom: 0%;">
            <h1><%= Math.round(data.list[0].main.temp) %>&deg;</h1>
            <div class="svgFlex">
              <div class="wind">
                <img src="../images/windy-day-svgrepo-com.svg" alt="" />
                <h3 style="margin-left: 8px; color: #495464;"><%= data.list[0].wind.speed %> m/s</h3>
              </div>
              <div class="rain">
                <img src="../images/humidity-svgrepo-com.svg" alt="" />
                <h3 style="margin-left: 8px; color: #495464;"><%= data.list[0].main.humidity %> %</h3>
              </div>
            </div>
          </div>
          <div class="condition">
            <h2><%= data.list[0].weather[0].description %></h2>
          </div>
          <div class="timestampWeather">
            <% const dailyWeather = {}; %>
            <% data.list.forEach(entry => {
                const date = entry.dt_txt.split(' ')[0];
                if (!dailyWeather[date] || entry.main.temp_max > dailyWeather[date].main.temp_max) {
                    dailyWeather[date] = entry;
                }
              }); %>
            <% Object.keys(dailyWeather).forEach(date => {
                const entry = dailyWeather[date];
                const dayName = new Date(date).toLocaleDateString('en-US', { weekday: 'long' });
            %>
            <div class="box">
              <h3 style="font-size: 12px; margin-top: 4px;"><%= dayName %></h3>
              <h3 style="font-size: 20px; margin-left: 8px;"><%= Math.ceil(entry.main.temp_max) %>&deg;</h3>
              <h3 style="font-size: 12px;"><%= entry.weather[0].description %></h3>
            </div>
            <% }); %>
          </div>
        </div>
        <div class="grid2">
          <% const t = new Date(); %>
          <% const hours = t.getHours(); %>
          <% const minutes = t.getMinutes(); %>
          <% const period = hours >= 12 ? 'PM' : 'AM'; %>
          <% const formattedHours = hours % 12 || 12; %>
          <h1><%= formattedHours %>:<%= String(minutes).padStart(2, '0') %> <%= period %></h1>
          <h2 style="color: #495464; margin-top: 60%;">Hourly Forecast</h2>
          <div class="grid2boxes">
            <% data.list.slice(0, 6).forEach(entry => { %>
            <div class="box2">
              <h3 style="font-size: 12px;"><%= entry.dt_txt.split(' ')[1].split(':')[0] %> <%= entry.dt_txt.split(' ')[1].split(':')[0] >= 12 ? 'PM' : 'AM' %></h3>
              <h3 style="font-size: 20px;"><%= Math.ceil(entry.main.temp) %>&deg;</h3>
              <h3 style="font-size: 12px;"><%= entry.weather[0].description %></h3>
            </div>
            <% }); %>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Function to add rain animation
      function addRainAnimation() {
        const rainAnimation = document.getElementById('rainAnimation');
        for (let i = 0; i < 100; i++) {
          const rainDrop = document.createElement('div');
          rainDrop.className = 'rain-drop';
          rainDrop.style.left = Math.random() * 100 + 'vw';
          rainDrop.style.animationDuration = 0.5 + Math.random() * 0.5 + 's';
          rainAnimation.appendChild(rainDrop);
        }
      }

      // Function to determine the time of day and weather conditions
      function displayVideoAndWeatherAnimation() {
        const videoElement = document.getElementById('timeOfDayVideo');
        const currentHour = new Date().getHours();
        let videoSrc = '';

        if (currentHour >= 6 && currentHour < 12) {
          videoSrc = 'path/to/morning-video.mp4';
        } else if (currentHour >= 12 && currentHour < 18) {
          videoSrc = 'path/to/afternoon-video.mp4';
        } else {
          videoSrc = 'path/to/night-video.mp4';
        }

        videoElement.src = videoSrc;

        // Assuming 'weatherDescription' is a variable from your backend that describes the current weather
        const weatherDescription = "<%= data.list[0].weather[0].description %>";

        if (weatherDescription.includes('rain')) {
          addRainAnimation();
        }
        // Add more conditions for different weather animations if needed
      }

      displayVideoAndWeatherAnimation();
    </script>
  </body>
</html>
